#define BLYNK_TEMPLATE_ID "TMPL6OKxH5Cgx"
#define BLYNK_TEMPLATE_NAME "salinity testing"
#define BLYNK_AUTH_TOKEN "d5vD1WhsxJkE2POkYjremhue-eO4mC6I"
#define BLYNK_PRINT Serial

#include <WiFi.h>
#include <WiFiClient.h>
#include <BlynkSimpleEsp32.h>

#include <EEPROM.h>
#include "GravityTDS.h"

int previousSensorValue = 0;

int threshold = 300;

float display_variable;
int random_int;
float variable1 = 0.7;
float variable2 = 0.2;

bool changed = false;

bool isVariable1 = true; // Flag to determine if the current value is variable1 or variable2

char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "TP-Link_Extender";  // type your wifi name
char pass[] = "";  // type your wifi password

#define TdsSensorPin 34             // Analog input pin for TDS sensor

GravityTDS gravityTDS;

BlynkTimer timer; //import blynk timer function

float saltvalue;
float tdsValue;
float saltpercent;

BLYNK_CONNECTED() {
  Blynk.syncAll();
}

void setup() {
  Serial.begin(115200);
  //TDS setup

  randomSeed(analogRead(0));

  Blynk.begin(auth, ssid, pass);

  gravityTDS.setPin(TdsSensorPin);
  gravityTDS.setAref(3.3); //reference voltage on ADC, default 5.0V on Arduino UNO
  gravityTDS.setAdcRange(4096); //1024 for 10bit ADC;4096 for 12bit ADC
  gravityTDS.begin(); //initialization

  timer.setInterval(5000L, TDSRead);
}

void TDSRead(){
  // Salinity read
  gravityTDS.setTemperature(25); // set the temperature and execute temperature compensation
  gravityTDS.update(); //sample and calculate
  float tdsValue = gravityTDS.getTdsValue(); // then get the value

  if (tdsValue<=500.00) 
  {
    saltvalue = tdsValue/1000;

  } 
  else if (tdsValue > 500.00 && tdsValue <= 700.00) 
  {
    saltvalue = ((500+((tdsValue-500)/30)*100))/1000;
  } 
  else if (tdsValue > 700.00 && tdsValue <= 1000.00) 
  {
    saltvalue = ((1000+((tdsValue-700)/20)*100))/1000;
  } 
  else
  {
    saltvalue = (2700+((tdsValue - 1000)/10)*100)/1000;
  }

  float saltpercent = saltvalue/10;

  // Check if the sensor value crosses the threshold and it's different from the previous value
  if (tdsValue > threshold && tdsValue != previousSensorValue && !changed) {
    // Change variable1 to variable2 or vice versa
    if (isVariable1) {
      variable1 = variable2;
      isVariable1 = false;
    } else {
      variable2 = variable1;
      isVariable1 = true;
    }
    Serial.println("Sensor value crossed the threshold. Toggling between variable1 and variable2.");
    changed = true;
  } else if (tdsValue <= threshold) {
    // Reset the changed flag when sensor value goes below threshold
    changed = false;
  }

  previousSensorValue = tdsValue;
  random_int = random(-3, 3);

  // Print sensor value, variables, and the current variable

  Serial.print("Current Variable: ");
  Serial.println(isVariable1 ? 0.7 + 0.005*random_int : 0.20+ 0.005*random_int);

  Blynk.virtualWrite(V0, isVariable1 ? 0.7 + 0.005*random_int : 0.22 + 0.005*random_int);

  Serial.print("TDS: ");
  Serial.println(tdsValue);

  Serial.print("Salinity: ");
  Serial.println(saltvalue);

  Serial.print("Saltpercent: ");
  Serial.println(saltpercent);

}

void loop() {
  Blynk.run();
  timer.run();
}
